services:
  webhook:
    container_name: webhook
    image: havus/go-webhook-server:1.0-rc
    restart: unless-stopped
    # ports:
    #   - 3000:3000
    networks:
      - app-network
  # nodejs:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   image: nodejs
  #   container_name: nodejs
  #   restart: unless-stopped
  #   networks:
  #     - app-network

  server_proxy:
    image: nginx:mainline-alpine
    container_name: server_proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    depends_on:
      - webhook
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - server_proxy
    # command: certonly --webroot --webroot-path=/var/www/html --email havus.it@gmail.com --agree-tos --no-eff-email --staging -d wadaw.space  -d www.wadaw.space
    command: certonly --webroot --webroot-path=/var/www/html --email havus.it@gmail.com --agree-tos --no-eff-email --force-renewal -d wadaw.space  -d www.wadaw.space

volumes:
  certbot-etc:
  certbot-var:
  web-root:
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: ./dhparam/
      o: bind

networks:
  app-network:
    driver: bridge
